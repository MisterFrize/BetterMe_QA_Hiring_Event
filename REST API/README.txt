Тест кейси для ендпоінта /pet/updatePetWithForm
Нижче наведено приклади тест кейсів для ендпоінта /pet/updatePetWithForm.

Примітка: Оскільки вимоги документації не завжди містять всі необхідні деталі (наприклад, обмеження для поля name), деякі тест кейси включають припущення або коментарі для подальшого уточнення.

Test Case №1: Успішне оновлення імені питомця
Назва: Успішне оновлення імені
Опис: Перевірити, що сервер успішно оновлює значення поля name питомця.
Preconditions: Питомця з даним petId існує.
Кроки:
Надіслати POST запит на /pet/{petId} з параметром name=UpdatedName.
Очікуваний результат:
Статус код: 200 OK.
Ім'я питомця оновлено в базі даних до "UpdatedName".
Коментар: Інші поля не повинні змінюватися.
Test Case №2: Успішне оновлення статусу питомця
Назва: Успішне оновлення статусу
Опис: Перевірити, що сервер оновлює значення поля status питомця.
Preconditions: Питомця з даним petId існує.
Кроки:
Надіслати POST запит на /pet/{petId} з параметром status=pending.
Очікуваний результат:
Статус код: 200 OK.
Статус питомця оновлено до "pending".
Test Case №3: Некоректний petId (неіснуючий)
Назва: Оновлення з неіснуючим petId
Опис: Перевірити, що сервер повертає помилку при зверненні до неіснуючого питомця.
Preconditions: petId, який не існує, наприклад, 999999999.
Кроки:
Надіслати POST запит на /pet/999999999 з будь-якими параметрами.
Очікуваний результат:
Статус код: 404 Not Found.
Тіло відповіді містить повідомлення про помилку.
Test Case №4: Відсутність параметрів для оновлення
Назва: Запит без параметрів
Опис: Перевірити, що сервер повертає помилку, якщо жоден з параметрів не передано.
Preconditions: Питомця з даним petId існує.
Кроки:
Надіслати POST запит на /pet/{petId} без жодного параметра.
Очікуваний результат:
Статус код: 400 Bad Request (або інший, що вказує на помилку в запиті).
В тілі відповіді міститься повідомлення про відсутність даних для оновлення.
Test Case №5: Надмірно довге ім'я
Назва: Оновлення з надмірно довгим ім'ям
Опис: Перевірити, що сервер повертає помилку при спробі оновлення name з значенням, яке перевищує максимально допустиму довжину (наприклад, більше 15 символів, якщо це припускається).
Preconditions: Питомця з даним petId існує.
Кроки:
Надіслати POST запит на /pet/{petId} з параметром name=VeryLongNameThatExceedsLimit.
Очікуваний результат:
Статус код: 400 Bad Request.
Тіло відповіді містить повідомлення на кшталт: "The name field exceeds the allowed maximum length."
Коментар: Цей кейс базується на припущенні щодо максимального розміру поля name. Деталі варто уточнити.
Test Case №6: Некоректний формат параметру name (числове значення)
Назва: Некоректний формат name
Опис: Перевірити, що сервер повертає помилку, якщо значення параметру name має числовий формат замість рядка.
Preconditions: Питомця з даним petId існує.
Кроки:
Надіслати POST запит на /pet/{petId} з параметром name=12345.
Очікуваний результат:
Статус код: 400 Bad Request.
Тіло відповіді містить повідомлення про некоректний формат.
Test Case №7: Некоректний формат параметру status
Назва: Некоректний формат status
Опис: Перевірити, що сервер повертає помилку при спробі оновлення status на значення, яке не відповідає допустимим варіантам (наприклад, "nonexistent_status").
Preconditions: Питомця з даним petId існує.
Кроки:
Надіслати POST запит на /pet/{petId} з параметром status=nonexistent_status.
Очікуваний результат:
Статус код: 400 Bad Request або 422 Unprocessable Entity.
В тілі відповіді міститься опис помилки.
Test Case №8: Дублювання запиту оновлення
Назва: Повторний запит оновлення
Опис: Перевірити, що сервер стабільно обробляє повторний запит оновлення з однаковими даними.
Preconditions: Питомця з даним petId існує.
Кроки:
Надіслати POST запит на /pet/{petId} з параметрами name=SameName та status=available.
Повторно надіслати той же запит.
Очікуваний результат:
Обидва запити повертають статус 200 OK.
Питомця залишається з однаковими значеннями.
Test Case №9: Оновлення з коректною авторизацією (якщо застосовується)
Назва: Успішне оновлення при наявності авторизації
Опис: Перевірити, що сервер дозволяє оновлення, коли у запиті присутні правильні заголовки авторизації.
Preconditions: Питомця з даним petId існує; API вимагає авторизації.
Кроки:
Надіслати POST запит на /pet/{petId} з коректними заголовками авторизації та параметрами оновлення.
Очікуваний результат:
Статус код: 200 OK.
Питомця оновлено.
Test Case №10: Оновлення без авторизації (якщо авторизація обов’язкова)
Назва: Оновлення без авторизації
Опис: Перевірити, що сервер повертає помилку, якщо запит не містить необхідних заголовків авторизації.
Preconditions: Питомця з даним petId існує; API вимагає авторизації.
Кроки:
Надіслати POST запит на /pet/{petId} без заголовків авторизації.
Очікуваний результат:
Статус код: 401 Unauthorized.
Тіло відповіді містить повідомлення про відсутність авторизації.
